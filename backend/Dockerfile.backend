# backend/Dockerfile.backend

# Use uma imagem base Python
FROM python:3.10-slim-buster

# Instala as dependências do sistema necessárias para o TeX Live
# e ferramentas de compilação
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        texlive-latex-base \
        texlive-fonts-recommended \
        texlive-latex-extra \
        texlive-pictures \
        texlive-binaries \
        texlive-lang-portuguese \
        texlive-publishers \
        texlive-fonts-extra \
        ghostscript \
        build-essential \
        && \
    rm -rf /var/lib/apt/lists/*

# Define o diretório de trabalho no contêiner
WORKDIR /app

# Copia os arquivos de dependências Python e instala-os
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copia todo o resto do código da sua aplicação (incluindo shared_data e src)
COPY . . 

# Define a variável de ambiente para a aplicação Flask
# ATENÇÃO: Alterado de src/main.py para src.main
ENV FLASK_APP=src.main 

# Expõe a porta que o Flask vai rodar
EXPOSE 5000

# Comando para iniciar a aplicação Flask
CMD ["flask", "run", "--host=0.0.0.0"]